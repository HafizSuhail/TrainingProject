 // Old Code
            // Object of DB CLASS
            var tofdbobject = new Collegedbcontex();
            // Create a varaible & Fetch the studentID from DB_Class
            var fetchstudent = tofdbobject.Students.Where(p => p.StudentId == Studentid).FirstOrDefault();
            // create an object of model class
            // and bind the data from student obj
            var modeldataandlists = new StudentEditorModel();
           
            using (var dbcontexobj = new Collegedbcontex()) // here created the dbclas object
            {
                // 2ND DROPDOWN LIST
                // we are getting list of category objects from DB
                var country = dbcontexobj.Countries.ToList();
                // Create the select listitem for Categories
                modeldataandlists.Countries = new List<SelectListItem>();
                // create Categories loop using for each
                modeldataandlists.Countries.Add(new SelectListItem { Value = null, Text = "--Select Country--" });
                foreach (var countryitem in country)
                {
                    // Create the categoryname variable
                    var countryname = $"{countryitem.CountryName}";

                    var countryItem = new SelectListItem
                    {
                        Value = countryitem.CountryId.ToString(),
                        Text = countryname
                    };
                    modeldataandlists.Countries.Add(countryItem);
                }

                // 1ST DROPDOWN LIST
                // we are getting list of category objects from DB
                var category = dbcontexobj.Categories.ToList();
                // Create the select listitem for Categories
                modeldataandlists.Categories = new List<SelectListItem>();
                // create Categories loop using for each
                modeldataandlists.Categories.Add(new SelectListItem { Value = null, Text = "--Select Category--" });
                foreach (var categitem in category)
                {
                    // Create the categoryname variable
                    var categoryname = $"{categitem.CategoryName}";

                    var categoryItem = new SelectListItem
                    {
                        Value = categitem.CategoryId.ToString(),
                        Text = categoryname
                    };
                    modeldataandlists.Categories.Add(categoryItem);
                }

                //3RD DROPDOWN LIST
                // we are getting list of category objects from DB
                var course = dbcontexobj.Courses.ToList();
                // Create the select listitem for Categories
                modeldataandlists.Courses = new List<SelectListItem>();
                // create Categories loop using for each
                modeldataandlists.Courses.Add(new SelectListItem { Value = null, Text = "--Select Course--" });
                foreach (var courseitem in course)
                {
                    // Create the categoryname variable
                    var coursename = $"{courseitem.Title}|{courseitem.Duration}Days|{courseitem.Price}/INR";

                    var courseItem = new SelectListItem
                    {
                        Value = courseitem.CourseId.ToString(),
                        Text = coursename
                    };
                    modeldataandlists.Courses.Add(courseItem);
                }
            }
            modeldataandlists.Studentid = fetchstudent.StudentId;
            modeldataandlists.RollNo = fetchstudent.RollNo;
            modeldataandlists.SName = fetchstudent.StudentName;
            modeldataandlists.gender = fetchstudent.Gender;
            modeldataandlists.dob = fetchstudent.Dob;
            modeldataandlists.mobilenumber = fetchstudent.MobileNumber;
            modeldataandlists.email = fetchstudent.Email;
            modeldataandlists.countryid = fetchstudent.CountryId;
            modeldataandlists.categoryid = fetchstudent.CategoryId;
            modeldataandlists.courseid = fetchstudent.CourseId;

            return View(modeldataandlists);